pseudo code:
while(1){
    for (pid : Worker){
      // Processing message
      if (probe_flag){
        // Tag 1: pull job
        if (status.MPI_TAG == 1) {
          if (!global_queue.empty()){
        	send one task from global queue to user 
          }
        }

        // Tag 2: push job
        if (status.MPI_TAG == 2) {
          // Check size of global queue
          if (global_queue.size() >= mpi_size) {
            Tell worker no need to push back
          }
          Reply number of Nodes wanted
          Receive Node list
        }

        // Tag 3: teminate
        if (status.MPI_TAG == 3) {
          	broadcast all worker to terminate
            master exit
        }
      } // End processing MPI_Iprobe
    }
  } // End while
    
    
while (1){
    if (local_stack.empty()){
      if (!idle_flag){
        idle_flag = true;
        // Tag 1: pull job
        MPI_Send(&pull_flag, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);
        continue;
      }
      if (probe_flag){
        // Tag 1: pull job receive
        if (status.MPI_TAG == 1) {
          MPI_Recv(start, sizeof(Node), MPI_CHAR, 0, 1, MPI_COMM_WORLD, &status);
          idle_flag = false;
        }

        // Tag 3: teminate
        if (status.MPI_TAG == 3) {
          exit
        }
      }
      continue;
    } else{
        // Push back to master
        if (++push_back_counter == comm_frequency){
          // request push back
          MPI_Send (&stack_size, 1, MPI_INT, 0, 2, MPI_COMM_WORLD);
    
          // Probe next message
          while (! probe ){
          }
          
          // check terminate
          if (status.MPI_TAG == 3){
            exit
          }
          Push back tasks
        }  
        do local search
    }
}
  
  
  
  
  
  
  
  
  
  
  
  
